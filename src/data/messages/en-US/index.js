export default {
  inputBackground: {
    backgroundColor: 'Background Color:',
    lineColor: 'Line color:',
    widthLine: 'Line width:',
    fontSizeBackground: 'Font Size:',
    fontBackground: 'Background font:',
    widthGraph: 'Graph width:',
    heightGraph: 'Graph height:',
    widthBorder: 'Border thickness:',
    borderColor: 'Border Color:',
    percentSideLeft: 'Left',
    percentSideRight: 'Right',
  },
  inputData: {
    dataName: 'Name:',
    qty: 'Quantity:',
    color: 'Color:',
    insertData: 'Inset Data',
  },
  inputBar: {
    fontColordifBar: 'Font color different from bar:',
    widthBar: 'Bar width:',
    fontSizeBar: 'Font Size:',
    fontBar: 'Font bar:',
    topPercent: 'Display the percentage at the top of the bar',
    baseName: 'Display name at base of slash',
    fontColor: 'Font Color:',
  },
  legend: {
    fontLegendSize: 'Font Size:',
    fontColorLegend: 'Font color:',
    colorLegend: 'Legend background color:',
    borderLegend: 'Border width:',
    colorBorderLegend: 'Border color:',
    legendSideLeft: 'Left',
    legendSideRight: 'Right',
    legendVerticalTop: 'Superior',
    legendVerticalLower: 'Lower',
    withSub: 'With subtitle',
  },
  summaryData: {
    data: 'The data will receive an object, where the key will be the name of the reference to the data to be displayed, and the value will be the number corresponding to it. The data is outside the “style” object, as it will contain the data to be displayed.',
    colors: 'The colors is an array with the colors displayed in the bars, with their order following the sequence of the data object. If not enough colors are passed, the bars will have the color #aaa, and it will not be displayed in the legend.',
    maxPercent: 'The maxPercent can receive three types: 100%, 75% and 50%, these being the maximum percentage to be displayed in the background. The maxPercent is not in the style object, so in case you prefer to make a logic to be displayed according to the result. If not passed, it will assume the value of 100%.',
  },
  summaryStyle: {
    backgrondColor: 'The backgroundColor specifies the background color of the graph. If no value is passed, it will assume the value "white".',
    lineColor: 'The lineColor defines the color of the lines marking the percentage on the background of the graph, if you don\'t want these lines, just put the same color as the backgroundColor. If no value is passed, it will assume the value "black".',
    widthLine: 'The widthLine determines the thickness of the line that divides the percentage at the bottom of the graph. If no value is passed, it will assume the value of "1".',
    fontSizeBackground: 'The fontSizeBackground informs the size of the font used to display the percentage on the background of the graph. If no value is passed, it will assume the value "10".',
    fontBackgorund: 'The fontBackground determines the font-family used in the graph background percentage. If no value is passed, it will assume the value of "monospace".',
    widthGraph: 'The widthGraph specifies the width in graph size. If no value is passed, it will assume the value of "1000".',
    heightGraph: 'heightGraph represents the height in graph size. If no value is passed, it will assume the value of "500".',
    WidthBorder: 'The widthBorder represents the thickness of the graphic\'s border. If no value is passed, it will assume the value of "1".',
    borderColor: 'The borderColor determines the color of the graphic\'s border. If no value is passed, it will assume the value of "black".',
    percentSide: 'The percentSide determines the side where the percentage will be displayed, if no value is passed it will receive the value of "left".',
    widthBar: 'The widthBar determines the width of the bars. If no value is passed, it will receive the value of "60".',
    fontSizeBar: 'The fontSizeBar determines the size of the letter written at the bottom of the bar. If no value is passed, you will receive "15".',
    fontBar: 'The fontBar determines the font-family used at the base of the bar. If no value is passed, it will assume the value of "monospace".',
    fontColordifBar: 'The fontColordifBar receives a boolean which determines whether the color of the letters at the base of the bar will have the same color as the bar, if not activated, the color will be the same as the bars.',
    fontColor: 'If you choose the color of the letters to differ from the bars, you can choose the color through fontColor, with the default value "black".',
    topPercent: 'When activated the topPercent displays the percentage value at the top of the bar, its formatting is the same as the letters at the bottom of the bar, but its display is independent.',
    baseName: 'The baseName determines whether to display the name at the base of the bar. If you choose to use caption, you can disable it by passing the boolean value of false.',
    withLegend: 'WithLegend determines whether you want a graph with legend or not, getting a boolean value from true to yes, with a default value of false.',
    fontLegend: 'The fontLegend determines the font-family used in the legend, the default being "monospace".',
    fontLegendSize: 'The fontColorLegend determines the font color used in the legend, the default being "black".',
    colorLegend: 'The colorLegend determines the color of the legend, the default being "white".',
    borderLegend: 'The borderLegend determines the thickness of the legend\'s border. If no value is passed, it will receive "1"',
    colorBorderLegend: 'colorBorderLegend determines the color of the legend\'s border',
    legendSide: 'The legendSide determines which side the legend will be on, defaulting to "right"',
    legendVertical: 'The legendVertical determines the position of the legend vertically, defaulting to "atop"',
  },
};
